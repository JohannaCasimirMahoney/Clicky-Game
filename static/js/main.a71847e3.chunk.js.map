{"version":3,"sources":["components/DrinkCard/DrinkCard.js","components/Wrapper/Wrapper.js","components/Title/Title.js","App.js","index.js"],"names":["DrinkCard","props","react_default","a","createElement","onClick","setClicked","id","className","alt","name","src","image","Wrapper","children","Title","correctGuesses","bestScore","clickMessage","App","state","drinks","_this","clickedDrink","filter","drink","clicked","console","log","i","length","setState","sort","b","Math","random","_this2","this","components_Wrapper_Wrapper","components_Title_Title","map","components_DrinkCard_DrinkCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"g+BAaeA,SAVG,SAAAC,GAAK,OACnBC,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAMJ,EAAMK,WAAWL,EAAMM,KAAKC,UAAU,iBAC1DN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACXN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCD1BC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWP,EAAMa,YCE1CC,SAFD,SAAAd,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAII,UAAU,SAASP,EAAMa,mBCIhDE,SAAiB,GACjBC,EAAY,EACZC,EAAe,6EA0HJC,6MAtHfC,MAAQ,CACNC,SACAL,iBACAC,YACAC,kBAGFZ,WAAa,SAAAC,GAEX,IAAMc,EAASC,EAAKF,MAAMC,OAGpBE,EAAeF,EAAOG,OAAO,SAAAC,GAAK,OAAIA,EAAMlB,KAAOA,IAGzD,GAAIgB,EAAa,GAAGG,QAAS,CAE3BC,QAAQC,IAAK,oBAAsBZ,GACnCW,QAAQC,IAAK,eAAiBX,GAE9BD,EAAiB,EACjBE,EAAe,0CAEf,IAAK,IAAIW,EAAI,EAAIA,EAAIR,EAAOS,OAASD,IACnCR,EAAOQ,GAAGH,SAAU,EAGtBJ,EAAKS,SAAS,CAACb,iBACfI,EAAKS,SAAS,CAACf,mBACfM,EAAKS,SAAS,CAACV,gBAIX,GAAIL,EAAiB,GAEzBO,EAAa,GAAGG,SAAU,EAK1BR,EAAe,wEAFfF,EAIqBC,IACnBA,EAAYD,EACZM,EAAKS,SAAS,CAAEd,eAItBI,EAAOW,KAAK,SAAS7B,EAAG8B,GAAG,MAAO,GAAMC,KAAKC,WAG7Cb,EAAKS,SAAS,CAAEV,WAChBC,EAAKS,SAAS,CAAEf,mBAChBM,EAAKS,SAAS,CAAEb,qBACP,CAGTK,EAAa,GAAGG,SAAU,EAG1BV,EAAiB,EAGjBE,EAAe,qDACfD,EAAY,GACZK,EAAKS,SAAS,CAAEd,cAEhB,IAAK,IAAIY,EAAI,EAAIA,EAAIR,EAAOS,OAASD,IACnCR,EAAOQ,GAAGH,SAAU,EAGtBL,EAAOW,KAAK,SAAS7B,EAAG8B,GAAG,MAAO,GAAMC,KAAKC,WAG7Cb,EAAKS,SAAS,CAAEV,WAChBC,EAAKS,SAAS,CAAEf,mBAChBM,EAAKS,SAAS,CAAEb,2FAMP,IAAAkB,EAAAC,KACP,OACFnC,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAD,2BACArC,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBACb6B,KAAKjB,MAAMF,cAIZhB,EAAAC,EAAAC,cAAA,MAAII,UAAU,4BAAd,oBACoB6B,KAAKjB,MAAMJ,eAC7Bd,EAAAC,EAAAC,cAAA,WAFF,gBAEsBiC,KAAKjB,MAAMH,WAGnCf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACZ6B,KAAKjB,MAAMC,OAAOmB,IAAI,SAAAf,GAAK,OAC1BvB,EAAAC,EAAAC,cAACqC,EAAD,CAEAnC,WAAY8B,EAAK9B,WACjBC,GAAIkB,EAAMlB,GACVmC,IAAKjB,EAAMlB,GACXK,MAAOa,EAAMb,oBA1GC+B,aCLlBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a71847e3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./DrinkCard.css\";\n\nconst DrinkCard = props => (\n    <div onClick={() => props.setClicked(props.id)} className=\"card col-md-3\">\n    <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n\n        </div>\n\n    </div>\n);\n\nexport default DrinkCard;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\nexport default Title;","import React, { Component } from \"react\";\nimport DrinkCard from \"./components/DrinkCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport drinks from \"./drinkcards.json\";\nimport \"./App.css\";\n\nlet correctGuesses = 0;\nlet bestScore = 0;\nlet clickMessage = \"Click on a drink to gain points! Click on the same one twice and you lose!\";\n\nclass App extends Component {\n  // Need to set this.state.matches so it matches json array\nstate = {\n  drinks,\n  correctGuesses,\n  bestScore,\n  clickMessage\n};\n\nsetClicked = id => {\n  // copy of the state matches array to work with\n  const drinks = this.state.drinks;\n\n  // This will filter the images that are true once clicked\n  const clickedDrink = drinks.filter(drink => drink.id === id);\n\n  // True when images are clicked\n  if (clickedDrink[0].clicked) {\n\n    console.log (\"Correct Guesses: \" + correctGuesses);\n    console.log (\"Best Score: \" + bestScore);\n\n    correctGuesses = 0;\n    clickMessage = \"Oh No! You already clicked on this one.\"\n\n    for (let i = 0 ; i < drinks.length ; i++){\n      drinks[i].clicked = false;\n    }\n\n    this.setState({clickMessage});\n    this.setState({correctGuesses});\n    this.setState({drinks});\n\n  // If clicked = false, and user didn't not finished\n\n  }else if (correctGuesses < 11) {\n    // This will set value to true\n    clickedDrink[0].clicked = true;\n    \n    // this will increase the corrent amount\n    correctGuesses++;\n\n    clickMessage = \"Looking Good! You have not click on that drink yet! Don't stop now!\";\n\n    if (correctGuesses > bestScore) {\n      bestScore = correctGuesses;\n      this.setState({ bestScore });\n    }\n\n// This will shuffle the array and get the random order\ndrinks.sort(function(a, b){return 0.5 - Math.random()});\n\n// Set this.state.matches will equal the new matches \nthis.setState({ drinks });\nthis.setState({ correctGuesses });\nthis.setState({ clickMessage });\n  } else {\n\n// set its value to be true\nclickedDrink[0].clicked = true;\n\n// this will restart the guess \ncorrectGuesses = 0;\n\n// encourage to play again\nclickMessage = \"Fantastic!!! You got them ALL!!! Let's play again!\";\nbestScore = 12;\nthis.setState({ bestScore });\n\nfor (let i = 0 ; i < drinks.length ; i++) {\n  drinks[i].clicked = false;\n}\n// This will shuffle the array and get the random order\ndrinks.sort(function(a, b){return 0.5 - Math.random()});\n\n// Set this.state.matches will equal the new matches \nthis.setState({ drinks });\nthis.setState({ correctGuesses });\nthis.setState({ clickMessage });\n\n  }\n\n};\n\nrender() {\n  return (\n<Wrapper>\n  <Title>Drinky Clicky Game</Title>\n  <h3 className=\"scoreSummary\">\n  {this.state.clickMessage}\n  </h3>\n  \n  \n  <h3 className=\"scoreSummary card-header\">\n    Correct Guesses: {this.state.correctGuesses} \n    <br /> Best Score: {this.state.bestScore}\n    </h3>\n\n<div className=\"container\">\n<div className=\"row\">\n  {this.state.drinks.map(drink => (\n    <DrinkCard\n\n    setClicked={this.setClicked}\n    id={drink.id}\n    key={drink.id}\n    image={drink.image}\n/>\n\n))}\n</div>  \n</div>\n\n</Wrapper>\n\n  );\n}\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}